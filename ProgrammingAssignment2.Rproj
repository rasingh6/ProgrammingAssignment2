## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
  J <- NULL
  set <- function(y){
    x <<- y
    J <<- NULL
  }
  get <- function()x
  setInverse <- function(inverse) J <<- inverse # set the inverse
  getInverse <- function() J  # get the inverse
  list(set = set, get = get, 
       setInverse = setInverse, 
       getInverse = getInverse)
}


## Write a short comment describing this function
cacheSolve <- function(x, ...) {
  ## Return a matrix that is the inverse of 'x'
  J <- x$getInverse()
  if(!is.null(J)){
    message("getting cached data")
    return(J)
  }
  mat <- x$get()      
  J <- solve(mat,...) # calculate the inverse if 'J' was NULL
  x$setInverse(J)     # store calculated inverse value in x 
  j                   # return the inverse of the input matrix
}
